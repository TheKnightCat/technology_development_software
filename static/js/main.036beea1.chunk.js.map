{"version":3,"sources":["photo.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","word","setWord","disabledButtons","setDisableButtons","toast","useRef","check","symbols","split","location","length","showError","i","showSuccess","current","show","severity","summary","life","useEffect","className","title","src","photo","alt","value","keyfilter","onChange","e","target","onKeyPress","code","icon","onClick","disabled","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAAe,G,kBAAA,IAA0B,mC,eC6K1BA,MA/Jf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEgCF,oBAAS,GAFzC,mBAENG,EAFM,KAEWC,EAFX,KAGPC,EAAQC,iBAAO,MAYrB,SAASC,IACP,IAAIC,EAAUP,EAAKQ,MAAM,IACrBC,EAAW,IAEf,GAAoC,MAAhCF,EAAQA,EAAQG,OAAS,GAC3B,OAAOC,IAGT,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAQG,OAAQE,IAClC,OAAQH,GACN,IAAK,IACH,OAAQF,EAAQK,IACd,IAAK,IACHH,EAAW,IACX,MAEF,IAAK,IACHA,EAAW,IACX,MAEF,IAAK,IACHA,EAAW,IACX,MAEF,QAEE,YADAE,IAGJ,MAEF,IAAK,IACH,OAAQJ,EAAQK,IACd,IAAK,IACHH,EAAW,IACX,MAEF,QAEE,YADAE,IAGJ,MAEF,IAAK,IACH,OAAQJ,EAAQK,IACd,IAAK,IACHH,EAAW,IACX,MAEF,IAAK,IACHA,EAAW,IACX,MAEF,IAAK,IACHA,EAAW,IACX,MAEF,QAEE,YADAE,IAGJ,MAEF,IAAK,IACH,OAAQJ,EAAQK,IACd,IAAK,IACH,MAEF,IAAK,IACHH,EAAW,IACPG,IAAML,EAAQG,OAAS,GAAoB,MAAfH,EAAQK,IAAYC,IACpD,MAEF,QAEE,YADAF,IAGJ,MAEF,IAAK,IACCC,EAAIL,EAAQG,OAAS,GAAoB,MAAfH,EAAQK,GAAYC,IAC7CF,IACL,MAEF,QAEE,YADAA,KASR,SAASE,IACPT,EAAMU,QAAQC,KAAK,CAAEC,SAAU,UAAWC,QAAS,iCAASC,KAAM,MAMpE,SAASP,IACPP,EAAMU,QAAQC,KAAK,CAAEC,SAAU,QAASC,QAAS,6CAAWC,KAAM,MAMpE,OAlHAC,qBAAU,WACRhB,EAA2B,KAATH,KACjB,CAACA,IAiHF,sBAAKoB,UAAU,MAAf,UACE,eAAC,OAAD,CAAMC,MAAM,kIAAyBD,UAAU,WAA/C,UACE,qBAAKE,IAAKC,EAAOC,IAAI,8EACrB,gCACE,oLAEA,qBAAKJ,UAAU,UAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,YAAD,CACEK,MAAOzB,EACP0B,UAAW,QACXC,SAAU,SAACC,GAAD,OAAO3B,EAAQ2B,EAAEC,OAAOJ,QAClCK,WAAY,SAACF,GACA,UAAXA,EAAEG,OAAqB7B,GAAmBI,OAG9C,cAAC,SAAD,CACE0B,KAAK,cACLC,QAAS3B,EACT4B,SAAUhC,IAEZ,cAAC,SAAD,CACEkB,UAAU,kBACVY,KAAK,cACLC,QAAS,kBAAMhC,EAAQ,KACvBiC,SAAUhC,eAMpB,cAAC,QAAD,CAAOiC,IAAK/B,QC5JHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.036beea1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/photo.cd19c0dd.jpg\";","import React, { useState, useEffect, useRef } from \"react\";\n\nimport { Card } from \"primereact/card\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Toast } from \"primereact/toast\";\n\nimport \"primereact/resources/themes/bootstrap4-light-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\n\nimport photo from \"./photo.jpg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [disabledButtons, setDisableButtons] = useState(true);\n  const toast = useRef(null);\n\n  /**\n   * Эффект для назначения доступа к кнопкам\n   */\n  useEffect(() => {\n    setDisableButtons(word === \"\");\n  }, [word]);\n\n  /**\n   * Функция для проверки задания\n   */\n  function check() {\n    let symbols = word.split(\"\");\n    let location = \"H\";\n\n    if (symbols[symbols.length - 1] !== \"*\") {\n      return showError();\n    }\n\n    for (let i = 0; i < symbols.length; i++) {\n      switch (location) {\n        case \"H\":\n          switch (symbols[i]) {\n            case \"a\":\n              location = \"B\";\n              break;\n\n            case \"b\":\n              location = \"A\";\n              break;\n\n            case \"c\":\n              location = \"C\";\n              break;\n\n            default:\n              showError();\n              return;\n          }\n          break;\n\n        case \"A\":\n          switch (symbols[i]) {\n            case \"a\":\n              location = \"B\";\n              break;\n\n            default:\n              showError();\n              return;\n          }\n          break;\n\n        case \"B\":\n          switch (symbols[i]) {\n            case \"a\":\n              location = \"C\";\n              break;\n\n            case \"b\":\n              location = \"I\";\n              break;\n\n            case \"c\":\n              location = \"A\";\n              break;\n\n            default:\n              showError();\n              return;\n          }\n          break;\n\n        case \"C\":\n          switch (symbols[i]) {\n            case \"b\":\n              break;\n\n            case \"*\":\n              location = \"I\";\n              if (i === symbols.length - 1 && symbols[i] === \"*\") showSuccess();\n              break;\n\n            default:\n              showError();\n              return;\n          }\n          break;\n\n        case \"I\":\n          if (i < symbols.length - 1 && symbols[i] === \"*\") showSuccess();\n          else showError();\n          break;\n\n        default:\n          showError();\n          return;\n      }\n    }\n  }\n\n  /**\n   * Функция для отображения уведомления о вводе верной последовательности символов\n   */\n  function showSuccess() {\n    toast.current.show({ severity: \"success\", summary: \"Верно\", life: 5000 });\n  }\n\n  /**\n   * Функция для отображения уведомления о вводе неверной последовательности символов\n   */\n  function showError() {\n    toast.current.show({ severity: \"error\", summary: \"Неверно\", life: 5000 });\n  }\n\n  /**\n   * Символ '*' - это признак конца цепочки. Его ввод в конце последовательности обязателен обязателен.\n   */\n  return (\n    <div className=\"App\">\n      <Card title=\"Лексический анализатор\" className=\"App-card\">\n        <img src={photo} alt=\"Схема задания\" />\n        <div>\n          <label>Введите цепочку символов a,b,c, *</label>\n\n          <div className=\"p-fluid\">\n            <div className=\"p-inputgroup\">\n              <InputText\n                value={word}\n                keyfilter={/[^\\s]/}\n                onChange={(e) => setWord(e.target.value)}\n                onKeyPress={(e) => {\n                  e.code === \"Enter\" && !disabledButtons && check();\n                }}\n              />\n              <Button\n                icon=\"pi pi-check\"\n                onClick={check}\n                disabled={disabledButtons}\n              />\n              <Button\n                className=\"p-button-danger\"\n                icon=\"pi pi-trash\"\n                onClick={() => setWord(\"\")}\n                disabled={disabledButtons}\n              />\n            </div>\n          </div>\n        </div>\n      </Card>\n      <Toast ref={toast} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}